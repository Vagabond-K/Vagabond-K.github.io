<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-ko-KR.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ModbusMaster Class</title><meta name="Language" content="ko-kr" /><meta name="System.Keywords" content="ModbusMaster class" /><meta name="System.Keywords" content="VagabondK.Protocols.Modbus.ModbusMaster class" /><meta name="Microsoft.Help.F1" content="VagabondK.Protocols.Modbus.ModbusMaster" /><meta name="Microsoft.Help.Id" content="T:VagabondK.Protocols.Modbus.ModbusMaster" /><meta name="Description" content="Modbus 마스터" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="VagabondK.Protocols.Modbus" /><meta name="file" content="T_VagabondK_Protocols_Modbus_ModbusMaster" /><meta name="guid" content="T_VagabondK_Protocols_Modbus_ModbusMaster" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vagabond K의 .NET 라이브러리<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Vagabond K의 .NET 라이브러리" tocid="roottoc">Vagabond K의 .NET 라이브러리</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="All Namespaces" tocid="R_Project_Documentation">All Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_VagabondK_Protocols_Modbus.htm" title="VagabondK.Protocols.Modbus" tocid="N_VagabondK_Protocols_Modbus">VagabondK.Protocols.Modbus</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_VagabondK_Protocols_Modbus_ModbusMaster.htm" title="ModbusMaster Class" tocid="T_VagabondK_Protocols_Modbus_ModbusMaster">ModbusMaster Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster__ctor.htm" title="ModbusMaster Constructor " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster__ctor">ModbusMaster Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_VagabondK_Protocols_Modbus_ModbusMaster.htm" title="ModbusMaster Properties" tocid="Properties_T_VagabondK_Protocols_Modbus_ModbusMaster">ModbusMaster Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_VagabondK_Protocols_Modbus_ModbusMaster.htm" title="ModbusMaster Methods" tocid="Methods_T_VagabondK_Protocols_Modbus_ModbusMaster">ModbusMaster Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>ModbusMaster Class</h1></td><td class="logoColumn"><img alt="Vagabond K" width="62" height="47" src="../icons/VagabondK.png" /></td></tr></table><span class="introStyle"></span> <div class="summary">
            Modbus 마스터
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST35F04B5E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">VagabondK.Protocols.Modbus<span id="LST35F04B5E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ModbusMaster</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_VagabondK_Protocols_Modbus.htm">VagabondK.Protocols.Modbus</a><br />
    <strong>Assembly:</strong>
   VagabondK.Protocols.Modbus (in VagabondK.Protocols.Modbus.dll) Version: 1.0.1<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cs','1','4');return false;">C#</a></div><div id="ID1EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','vb','2','4');return false;">VB</a></div><div id="ID1EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','cpp','3','4');return false;">C++</a></div><div id="ID1EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ModbusMaster</span> : <span class="identifier">IDisposable</span></pre></div><div id="ID1EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">ModbusMaster</span>
	<span class="keyword">Implements</span> <span class="identifier">IDisposable</span></pre></div><div id="ID1EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">ModbusMaster</span> : <span class="identifier">IDisposable</span></pre></div><div id="ID1EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">ModbusMaster</span> =  
    <span class="keyword">class</span>
        <span class="keyword">interface</span> <span class="identifier">IDisposable</span>
    <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EDCA");</script></div><p>The <span class="selflink">ModbusMaster</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster__ctor.htm">ModbusMaster<span id="LST35F04B5E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            생성자
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster__ctor_1.htm">ModbusMaster(IChannel)</a></td><td><div class="summary">
            생성자
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster__ctor_3.htm">ModbusMaster(ModbusSerializer)</a></td><td><div class="summary">
            생성자
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster__ctor_2.htm">ModbusMaster(IChannel, ModbusSerializer)</a></td><td><div class="summary">
            생성자
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_VagabondK_Protocols_Modbus_ModbusMaster_Channel.htm">Channel</a></td><td><div class="summary">
            통신 채널
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_VagabondK_Protocols_Modbus_ModbusMaster_Serializer.htm">Serializer</a></td><td><div class="summary">
            Modbus Serializer
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_VagabondK_Protocols_Modbus_ModbusMaster_ThrowsModbusExceptions.htm">ThrowsModbusExceptions</a></td><td><div class="summary">
            Modbus Exception에 대한 예외 발생 여부
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_VagabondK_Protocols_Modbus_ModbusMaster_Timeout.htm">Timeout</a></td><td><div class="summary">
            응답 제한시간(밀리초)
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Dispose.htm">Dispose</a></td><td><div class="summary">
            리소스 해제
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoil.htm">ReadCoil(Byte, UInt16)</a></td><td><div class="summary">
            단일 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoil_1.htm">ReadCoil(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoils.htm">ReadCoils(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoils_1.htm">ReadCoils(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInput.htm">ReadDiscreteInput(Byte, UInt16)</a></td><td><div class="summary">
            단일 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInput_1.htm">ReadDiscreteInput(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInputs.htm">ReadDiscreteInputs(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInputs_1.htm">ReadDiscreteInputs(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters_1.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters_2.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters_3.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters.htm">ReadDoubleFromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters_1.htm">ReadDoubleFromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters_2.htm">ReadDoubleFromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters_3.htm">ReadDoubleFromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegister.htm">ReadHoldingRegister(Byte, UInt16)</a></td><td><div class="summary">
            단일 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegister_1.htm">ReadHoldingRegister(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisterBytes.htm">ReadHoldingRegisterBytes(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisterBytes_1.htm">ReadHoldingRegisterBytes(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisters.htm">ReadHoldingRegisters(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisters_1.htm">ReadHoldingRegisters(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegister.htm">ReadInputRegister(Byte, UInt16)</a></td><td><div class="summary">
            단일 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegister_1.htm">ReadInputRegister(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisterBytes.htm">ReadInputRegisterBytes(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Input Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisterBytes_1.htm">ReadInputRegisterBytes(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Input Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisters.htm">ReadInputRegisters(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisters_1.htm">ReadInputRegisters(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters.htm">ReadInt16FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters_1.htm">ReadInt16FromHoldingRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters_3.htm">ReadInt16FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters_2.htm">ReadInt16FromHoldingRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters.htm">ReadInt16FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters_1.htm">ReadInt16FromInputRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters_3.htm">ReadInt16FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters_2.htm">ReadInt16FromInputRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters.htm">ReadInt32FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters_1.htm">ReadInt32FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters_2.htm">ReadInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters_3.htm">ReadInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters.htm">ReadInt32FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters_1.htm">ReadInt32FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters_2.htm">ReadInt32FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters_3.htm">ReadInt32FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters.htm">ReadInt64FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters_1.htm">ReadInt64FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters_2.htm">ReadInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters_3.htm">ReadInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters.htm">ReadInt64FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters_1.htm">ReadInt64FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters_2.htm">ReadInt64FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters_3.htm">ReadInt64FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters.htm">ReadSingleFromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters_1.htm">ReadSingleFromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters_2.htm">ReadSingleFromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters_3.htm">ReadSingleFromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters.htm">ReadSingleFromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters_1.htm">ReadSingleFromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters_2.htm">ReadSingleFromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters_3.htm">ReadSingleFromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters_1.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters_3.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters_2.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters.htm">ReadUInt16FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters_1.htm">ReadUInt16FromInputRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters_3.htm">ReadUInt16FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters_2.htm">ReadUInt16FromInputRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters_1.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters_2.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters_3.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters.htm">ReadUInt32FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters_1.htm">ReadUInt32FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters_2.htm">ReadUInt32FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters_3.htm">ReadUInt32FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters_1.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters_2.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters_3.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters.htm">ReadUInt64FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters_1.htm">ReadUInt64FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters_2.htm">ReadUInt64FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters_3.htm">ReadUInt64FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Request.htm">Request(ModbusRequest)</a></td><td><div class="summary">
            Modbus 요청하기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Request_1.htm">Request(ModbusRequest, Int32)</a></td><td><div class="summary">
            Modbus 요청하기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write.htm">Write(Byte, UInt16, Double)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_4.htm">Write(Byte, UInt16, Int16)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_8.htm">Write(Byte, UInt16, Int32)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_12.htm">Write(Byte, UInt16, Int64)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_16.htm">Write(Byte, UInt16, Single)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_20.htm">Write(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_24.htm">Write(Byte, UInt16, UInt32)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_28.htm">Write(Byte, UInt16, UInt64)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_1.htm">Write(Byte, UInt16, Double, Int32)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_2.htm">Write(Byte, UInt16, Double, ModbusEndian)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_5.htm">Write(Byte, UInt16, Int16, Boolean)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_7.htm">Write(Byte, UInt16, Int16, Int32)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_9.htm">Write(Byte, UInt16, Int32, Int32)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_10.htm">Write(Byte, UInt16, Int32, ModbusEndian)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_13.htm">Write(Byte, UInt16, Int64, Int32)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_14.htm">Write(Byte, UInt16, Int64, ModbusEndian)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_17.htm">Write(Byte, UInt16, Single, Int32)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_18.htm">Write(Byte, UInt16, Single, ModbusEndian)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_21.htm">Write(Byte, UInt16, UInt16, Boolean)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_23.htm">Write(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_25.htm">Write(Byte, UInt16, UInt32, Int32)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_26.htm">Write(Byte, UInt16, UInt32, ModbusEndian)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_29.htm">Write(Byte, UInt16, UInt64, Int32)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_30.htm">Write(Byte, UInt16, UInt64, ModbusEndian)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_3.htm">Write(Byte, UInt16, Double, ModbusEndian, Int32)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_6.htm">Write(Byte, UInt16, Int16, Boolean, Int32)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_11.htm">Write(Byte, UInt16, Int32, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_15.htm">Write(Byte, UInt16, Int64, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_19.htm">Write(Byte, UInt16, Single, ModbusEndian, Int32)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_22.htm">Write(Byte, UInt16, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_27.htm">Write(Byte, UInt16, UInt32, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_31.htm">Write(Byte, UInt16, UInt64, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoil.htm">WriteCoil(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            단일 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoil_1.htm">WriteCoil(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            단일 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoils.htm">WriteCoils(Byte, UInt16, IEnumerable<span id="LST35F04B5E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST35F04B5E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_4?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            다중 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoils_1.htm">WriteCoils(Byte, UInt16, IEnumerable<span id="LST35F04B5E_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST35F04B5E_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            다중 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegister.htm">WriteHoldingRegister(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            단일 Holding Register 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegister_1.htm">WriteHoldingRegister(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            단일 Holding Register 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisterBytes.htm">WriteHoldingRegisterBytes(Byte, UInt16, IEnumerable<span id="LST35F04B5E_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Byte<span id="LST35F04B5E_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisterBytes_1.htm">WriteHoldingRegisterBytes(Byte, UInt16, IEnumerable<span id="LST35F04B5E_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Byte<span id="LST35F04B5E_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisters.htm">WriteHoldingRegisters(Byte, UInt16, IEnumerable<span id="LST35F04B5E_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt16<span id="LST35F04B5E_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            다중 Holding Register 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisters_1.htm">WriteHoldingRegisters(Byte, UInt16, IEnumerable<span id="LST35F04B5E_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt16<span id="LST35F04B5E_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            다중 Holding Register 쓰기
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_System_PropertyExtensions_Get__1.htm">Get<span id="LST35F04B5E_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TProperty<span id="LST35F04B5E_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            속성 가져오기. null일 경우 초기화 동작의 결과를 반환. Lazy와 비슷함.
            </div> (Defined by <a href="T_System_PropertyExtensions.htm">PropertyExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_System_PropertyExtensions_Set__1_2.htm">Set<span id="LST35F04B5E_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TProperty<span id="LST35F04B5E_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            속성 설정
            </div> (Defined by <a href="T_System_PropertyExtensions.htm">PropertyExtensions</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_System_ConvertExtensions_To__1.htm">To<span id="LST35F04B5E_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST35F04B5E_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST35F04B5E_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            지정된 object를 특정 형식으로 변환하고, object가 null이거나 변환 중 예외 발생 시 기본 값을 반환.
            </div> (Defined by <a href="T_System_ConvertExtensions.htm">ConvertExtensions</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_VagabondK_Protocols_Modbus.htm">VagabondK.Protocols.Modbus Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>