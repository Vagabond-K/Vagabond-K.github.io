<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-ko-KR.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ModbusMaster 메서드</title><meta name="Language" content="ko-kr" /><meta name="System.Keywords" content="ModbusMaster 클래스, 메서드" /><meta name="Microsoft.Help.Id" content="Methods.T:VagabondK.Protocols.Modbus.ModbusMaster" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="VagabondK.Protocols.Modbus" /><meta name="file" content="Methods_T_VagabondK_Protocols_Modbus_ModbusMaster" /><meta name="guid" content="Methods_T_VagabondK_Protocols_Modbus_ModbusMaster" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vagabond K의 .NET 라이브러리<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Vagabond K의 .NET 라이브러리" tocid="roottoc">Vagabond K의 .NET 라이브러리</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="네임스페이스 목록" tocid="R_Project_Documentation">네임스페이스 목록</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_VagabondK_Protocols_Modbus.htm" title="VagabondK.Protocols.Modbus" tocid="N_VagabondK_Protocols_Modbus">VagabondK.Protocols.Modbus</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_VagabondK_Protocols_Modbus_ModbusMaster.htm" title="ModbusMaster 클래스" tocid="T_VagabondK_Protocols_Modbus_ModbusMaster">ModbusMaster 클래스</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_VagabondK_Protocols_Modbus_ModbusMaster.htm" title="ModbusMaster 메서드" tocid="Methods_T_VagabondK_Protocols_Modbus_ModbusMaster">ModbusMaster 메서드</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_VagabondK_Protocols_Modbus_ModbusMaster_Dispose.htm" title="Dispose 메서드 " tocid="M_VagabondK_Protocols_Modbus_ModbusMaster_Dispose">Dispose 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoil.htm" title="ReadCoil 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoil">ReadCoil 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoils.htm" title="ReadCoils 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoils">ReadCoils 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInput.htm" title="ReadDiscreteInput 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInput">ReadDiscreteInput 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInputs.htm" title="ReadDiscreteInputs 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInputs">ReadDiscreteInputs 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters.htm" title="ReadDoubleFromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters">ReadDoubleFromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters.htm" title="ReadDoubleFromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters">ReadDoubleFromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegister.htm" title="ReadHoldingRegister 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegister">ReadHoldingRegister 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisterBytes.htm" title="ReadHoldingRegisterBytes 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisterBytes">ReadHoldingRegisterBytes 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisters.htm" title="ReadHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisters">ReadHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegister.htm" title="ReadInputRegister 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegister">ReadInputRegister 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisterBytes.htm" title="ReadInputRegisterBytes 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisterBytes">ReadInputRegisterBytes 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisters.htm" title="ReadInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisters">ReadInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters.htm" title="ReadInt16FromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters">ReadInt16FromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters.htm" title="ReadInt16FromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters">ReadInt16FromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters.htm" title="ReadInt32FromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters">ReadInt32FromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters.htm" title="ReadInt32FromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters">ReadInt32FromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters.htm" title="ReadInt64FromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters">ReadInt64FromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters.htm" title="ReadInt64FromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters">ReadInt64FromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters.htm" title="ReadSingleFromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters">ReadSingleFromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters.htm" title="ReadSingleFromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters">ReadSingleFromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters.htm" title="ReadUInt16FromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters">ReadUInt16FromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters.htm" title="ReadUInt16FromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters">ReadUInt16FromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters.htm" title="ReadUInt32FromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters">ReadUInt32FromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters.htm" title="ReadUInt32FromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters">ReadUInt32FromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters.htm" title="ReadUInt64FromHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters">ReadUInt64FromHoldingRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters.htm" title="ReadUInt64FromInputRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters">ReadUInt64FromInputRegisters 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_Request.htm" title="Request 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_Request">Request 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_Write.htm" title="Write 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_Write">Write 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoil.htm" title="WriteCoil 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoil">WriteCoil 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoils.htm" title="WriteCoils 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoils">WriteCoils 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegister.htm" title="WriteHoldingRegister 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegister">WriteHoldingRegister 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisterBytes.htm" title="WriteHoldingRegisterBytes 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisterBytes">WriteHoldingRegisterBytes 메서드 </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisters.htm" title="WriteHoldingRegisters 메서드 " tocid="Overload_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisters">WriteHoldingRegisters 메서드 </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="크기를 조정하려면 클릭하거나 드래그하세요." title="크기를 조정하려면 클릭하거나 드래그하세요." /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="크기를 조정하려면 클릭하거나 드래그하세요." title="크기를 조정하려면 클릭하거나 드래그하세요." /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>ModbusMaster 메서드</h1></td><td class="logoColumn"><img alt="Vagabond K" width="62" height="47" src="../icons/VagabondK.png" /></td></tr></table><span class="introStyle"></span> <p><a href="T_VagabondK_Protocols_Modbus_ModbusMaster.htm">ModbusMaster</a> 형식은 다음의 멤버를 노출합니다.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />메서드</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>이름</th><th>설명</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Dispose.htm">Dispose</a></td><td><div class="summary">
            리소스 해제
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoil.htm">ReadCoil(Byte, UInt16)</a></td><td><div class="summary">
            단일 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoil_1.htm">ReadCoil(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoils.htm">ReadCoils(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadCoils_1.htm">ReadCoils(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Coil 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInput.htm">ReadDiscreteInput(Byte, UInt16)</a></td><td><div class="summary">
            단일 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInput_1.htm">ReadDiscreteInput(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInputs.htm">ReadDiscreteInputs(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDiscreteInputs_1.htm">ReadDiscreteInputs(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Discrete Input 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters_1.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters_2.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromHoldingRegisters_3.htm">ReadDoubleFromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters.htm">ReadDoubleFromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters_1.htm">ReadDoubleFromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters_2.htm">ReadDoubleFromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadDoubleFromInputRegisters_3.htm">ReadDoubleFromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 8바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegister.htm">ReadHoldingRegister(Byte, UInt16)</a></td><td><div class="summary">
            단일 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegister_1.htm">ReadHoldingRegister(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisterBytes.htm">ReadHoldingRegisterBytes(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisterBytes_1.htm">ReadHoldingRegisterBytes(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisters.htm">ReadHoldingRegisters(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadHoldingRegisters_1.htm">ReadHoldingRegisters(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Holding Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegister.htm">ReadInputRegister(Byte, UInt16)</a></td><td><div class="summary">
            단일 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegister_1.htm">ReadInputRegister(Byte, UInt16, Int32)</a></td><td><div class="summary">
            단일 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisterBytes.htm">ReadInputRegisterBytes(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Input Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisterBytes_1.htm">ReadInputRegisterBytes(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Input Register를 Raw 바이트 배열로 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisters.htm">ReadInputRegisters(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            다중 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInputRegisters_1.htm">ReadInputRegisters(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            다중 Input Register 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters.htm">ReadInt16FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters_1.htm">ReadInt16FromHoldingRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters_3.htm">ReadInt16FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromHoldingRegisters_2.htm">ReadInt16FromHoldingRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters.htm">ReadInt16FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters_1.htm">ReadInt16FromInputRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters_3.htm">ReadInt16FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt16FromInputRegisters_2.htm">ReadInt16FromInputRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters.htm">ReadInt32FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters_1.htm">ReadInt32FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters_2.htm">ReadInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromHoldingRegisters_3.htm">ReadInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters.htm">ReadInt32FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters_1.htm">ReadInt32FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters_2.htm">ReadInt32FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt32FromInputRegisters_3.htm">ReadInt32FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters.htm">ReadInt64FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters_1.htm">ReadInt64FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters_2.htm">ReadInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromHoldingRegisters_3.htm">ReadInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters.htm">ReadInt64FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters_1.htm">ReadInt64FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters_2.htm">ReadInt64FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadInt64FromInputRegisters_3.htm">ReadInt64FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 있는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters.htm">ReadSingleFromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters_1.htm">ReadSingleFromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters_2.htm">ReadSingleFromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromHoldingRegisters_3.htm">ReadSingleFromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters.htm">ReadSingleFromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters_1.htm">ReadSingleFromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters_2.htm">ReadSingleFromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadSingleFromInputRegisters_3.htm">ReadSingleFromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 4바이트 실수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters_1.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters_3.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromHoldingRegisters_2.htm">ReadUInt16FromHoldingRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters.htm">ReadUInt16FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters_1.htm">ReadUInt16FromInputRegisters(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters_3.htm">ReadUInt16FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt16FromInputRegisters_2.htm">ReadUInt16FromInputRegisters(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 2바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters_1.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters_2.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromHoldingRegisters_3.htm">ReadUInt32FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters.htm">ReadUInt32FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters_1.htm">ReadUInt32FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters_2.htm">ReadUInt32FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt32FromInputRegisters_3.htm">ReadUInt32FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 4바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters_1.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters_2.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromHoldingRegisters_3.htm">ReadUInt64FromHoldingRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Holding Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters.htm">ReadUInt64FromInputRegisters(Byte, UInt16)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters_1.htm">ReadUInt64FromInputRegisters(Byte, UInt16, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters_2.htm">ReadUInt64FromInputRegisters(Byte, UInt16, ModbusEndian)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_ReadUInt64FromInputRegisters_3.htm">ReadUInt64FromInputRegisters(Byte, UInt16, ModbusEndian, Int32)</a></td><td><div class="summary">
            Input Register에서 부호 없는 8바이트 정수 값 읽기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Request.htm">Request(ModbusRequest)</a></td><td><div class="summary">
            Modbus 요청하기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Request_1.htm">Request(ModbusRequest, Int32)</a></td><td><div class="summary">
            Modbus 요청하기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write.htm">Write(Byte, UInt16, Double)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_4.htm">Write(Byte, UInt16, Int16)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_8.htm">Write(Byte, UInt16, Int32)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_12.htm">Write(Byte, UInt16, Int64)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_16.htm">Write(Byte, UInt16, Single)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_20.htm">Write(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_24.htm">Write(Byte, UInt16, UInt32)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_28.htm">Write(Byte, UInt16, UInt64)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_1.htm">Write(Byte, UInt16, Double, Int32)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_2.htm">Write(Byte, UInt16, Double, ModbusEndian)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_5.htm">Write(Byte, UInt16, Int16, Boolean)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_7.htm">Write(Byte, UInt16, Int16, Int32)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_9.htm">Write(Byte, UInt16, Int32, Int32)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_10.htm">Write(Byte, UInt16, Int32, ModbusEndian)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_13.htm">Write(Byte, UInt16, Int64, Int32)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_14.htm">Write(Byte, UInt16, Int64, ModbusEndian)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_17.htm">Write(Byte, UInt16, Single, Int32)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_18.htm">Write(Byte, UInt16, Single, ModbusEndian)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_21.htm">Write(Byte, UInt16, UInt16, Boolean)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_23.htm">Write(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_25.htm">Write(Byte, UInt16, UInt32, Int32)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_26.htm">Write(Byte, UInt16, UInt32, ModbusEndian)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_29.htm">Write(Byte, UInt16, UInt64, Int32)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_30.htm">Write(Byte, UInt16, UInt64, ModbusEndian)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_3.htm">Write(Byte, UInt16, Double, ModbusEndian, Int32)</a></td><td><div class="summary">
            8바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_6.htm">Write(Byte, UInt16, Int16, Boolean, Int32)</a></td><td><div class="summary">
            부호 있는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_11.htm">Write(Byte, UInt16, Int32, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 있는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_15.htm">Write(Byte, UInt16, Int64, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 있는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_19.htm">Write(Byte, UInt16, Single, ModbusEndian, Int32)</a></td><td><div class="summary">
            4바이트 실수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_22.htm">Write(Byte, UInt16, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            부호 없는 2바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_27.htm">Write(Byte, UInt16, UInt32, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 없는 4바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_Write_31.htm">Write(Byte, UInt16, UInt64, ModbusEndian, Int32)</a></td><td><div class="summary">
            부호 없는 8바이트 정수 값 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoil.htm">WriteCoil(Byte, UInt16, Boolean)</a></td><td><div class="summary">
            단일 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoil_1.htm">WriteCoil(Byte, UInt16, Boolean, Int32)</a></td><td><div class="summary">
            단일 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoils.htm">WriteCoils(Byte, UInt16, IEnumerable<span id="LST1B808685_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1B808685_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            다중 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteCoils_1.htm">WriteCoils(Byte, UInt16, IEnumerable<span id="LST1B808685_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Boolean<span id="LST1B808685_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            다중 Coil 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegister.htm">WriteHoldingRegister(Byte, UInt16, UInt16)</a></td><td><div class="summary">
            단일 Holding Register 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegister_1.htm">WriteHoldingRegister(Byte, UInt16, UInt16, Int32)</a></td><td><div class="summary">
            단일 Holding Register 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisterBytes.htm">WriteHoldingRegisterBytes(Byte, UInt16, IEnumerable<span id="LST1B808685_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Byte<span id="LST1B808685_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisterBytes_1.htm">WriteHoldingRegisterBytes(Byte, UInt16, IEnumerable<span id="LST1B808685_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Byte<span id="LST1B808685_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            다중 Holding Register를 Raw 바이트 배열로 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisters.htm">WriteHoldingRegisters(Byte, UInt16, IEnumerable<span id="LST1B808685_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt16<span id="LST1B808685_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            다중 Holding Register 쓰기
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public 메서드" title="Public 메서드" /></td><td><a href="M_VagabondK_Protocols_Modbus_ModbusMaster_WriteHoldingRegisters_1.htm">WriteHoldingRegisters(Byte, UInt16, IEnumerable<span id="LST1B808685_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>UInt16<span id="LST1B808685_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32)</a></td><td><div class="summary">
            다중 Holding Register 쓰기
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />확장 메서드</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>이름</th><th>설명</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public 확장 메서드" title="Public 확장 메서드" /></td><td><a href="M_System_PropertyExtensions_Get__1.htm">Get<span id="LST1B808685_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TProperty<span id="LST1B808685_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            속성 가져오기. null일 경우 초기화 동작의 결과를 반환. Lazy와 비슷함.
            </div> (<a href="T_System_PropertyExtensions.htm">PropertyExtensions</a>에 의해 정의됨.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public 확장 메서드" title="Public 확장 메서드" /></td><td><a href="M_System_PropertyExtensions_Set__1_2.htm">Set<span id="LST1B808685_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TProperty<span id="LST1B808685_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            속성 설정
            </div> (<a href="T_System_PropertyExtensions.htm">PropertyExtensions</a>에 의해 정의됨.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public 확장 메서드" title="Public 확장 메서드" /></td><td><a href="M_System_ConvertExtensions_To__1.htm">To<span id="LST1B808685_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1B808685_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            value를 특정 형식으로 변환하고, value가 null이거나 변환 중 예외 발생 시 기본 값을 반환.
            </div> (<a href="T_System_ConvertExtensions.htm">ConvertExtensions</a>에 의해 정의됨.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public 확장 메서드" title="Public 확장 메서드" /></td><td><a href="M_System_ConvertExtensions_ToNullable__1.htm">ToNullable<span id="LST1B808685_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1B808685_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_19?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            value를 특정 형식에 대한 Nullable로 변환하고, value가 null이거나 변환 중 예외 발생 시 null을 반환.
            </div> (<a href="T_System_ConvertExtensions.htm">ConvertExtensions</a>에 의해 정의됨.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public 확장 메서드" title="Public 확장 메서드" /></td><td><a href="M_System_ConvertExtensions_TryConvert__1.htm">TryConvert<span id="LST1B808685_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST1B808685_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1B808685_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
            value를 특정 형식으로 변환 시도
            </div> (<a href="T_System_ConvertExtensions.htm">ConvertExtensions</a>에 의해 정의됨.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />관련 항목</span></div><div id="ID2RBSection" class="collapsibleSection"><h4 class="subHeading">참조</h4><div class="seeAlsoStyle"><a href="T_VagabondK_Protocols_Modbus_ModbusMaster.htm">ModbusMaster 클래스</a></div><div class="seeAlsoStyle"><a href="N_VagabondK_Protocols_Modbus.htm">VagabondK.Protocols.Modbus 네임스페이스</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>